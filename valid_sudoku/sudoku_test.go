package validsudoku

import (
	"testing"
)

func TestValidSudoku(t *testing.T) {
	// Define the board as a 2D array of strings
	board1 := [9][9]string{
		{"1", "2", ".", ".", "3", ".", ".", ".", "."},
		{"4", ".", ".", "5", ".", ".", ".", ".", "."},
		{".", "9", "8", ".", ".", ".", ".", ".", "3"},
		{"5", ".", ".", ".", "6", ".", ".", ".", "4"},
		{".", ".", ".", "8", ".", "3", ".", ".", "5"},
		{"7", ".", ".", ".", "2", ".", ".", ".", "6"},
		{".", ".", ".", ".", ".", ".", "2", ".", "."},
		{".", ".", ".", "4", "1", "9", ".", ".", "8"},
		{".", ".", ".", ".", "8", ".", ".", "7", "9"},
	}

	// Define the board as a 2D array of strings
	// boardww := [9][9]string{
	// 	{"1", "2", ".", ".", "3", ".", ".", ".", "."},
	// 	{"4", ".", ".", "5", ".", ".", ".", ".", "."},
	// 	{".", "9", "1", ".", ".", ".", ".", ".", "3"},
	// 	{"5", ".", ".", ".", "6", ".", ".", ".", "4"},
	// 	{".", ".", ".", "8", ".", "3", ".", ".", "5"},
	// 	{"7", ".", ".", ".", "2", ".", ".", ".", "6"},
	// 	{".", ".", ".", ".", ".", ".", "2", ".", "."},
	// 	{".", ".", ".", "4", "1", "9", ".", ".", "8"},
	// 	{".", ".", ".", ".", "8", ".", ".", "7", "9"},
	// }

	testcases := []struct {
		board [9][9]string
		want  bool
	}{
		{board1, true},
		// {board2, false},
	}

	for _, testcase := range testcases {
		board := testcase.board
		got := ValidSudoku(board)

		if got != testcase.want {
			t.Errorf("got %#v want %#v", got, testcase.want)
		}
	}
}
